services:
  config-server:
    image: config-server:latest
    build:
      context: ./config-server
      dockerfile: Dockerfile
    restart: "no"
    ports:
      - "8071:8071"
    environment:
      SECRET_KEY: secretKey
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8071/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    networks:
      backend:

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      backend:

  gateway-server:
    image: gateway-server:latest
    build:
      context: ./gateway-server
      dockerfile: Dockerfile
    restart: "no"
    ports:
      - "8080:8080"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_started
      zipkin:
        condition: service_started
    networks:
      backend:

  user-service:
    image: user-service:latest
    build:
      context: ./user-service
      dockerfile: Dockerfile
    restart: "no"
    ports:
      - "8081:8081"
    depends_on:
      config-server:
        condition: service_healthy
      to-do-list-db:
        condition: service_healthy
      zipkin:
        condition: service_started
    networks:
      backend:

  task-service:
    image: task-service:latest
    build:
      context: ./task-service
      dockerfile: Dockerfile
    restart: "no"
    ports:
      - "8082:8082"
    depends_on:
      config-server:
        condition: service_healthy
      to-do-list-db:
        condition: service_healthy
      zipkin:
        condition: service_started
    networks:
      backend:

  file-service:
    image: file-service:latest
    build:
      context: ./file-service
      dockerfile: Dockerfile
    restart: "no"
    ports:
      - "8083:8083"
    depends_on:
      config-server:
        condition: service_healthy
      minio:
        condition: service_healthy
      to-do-list-db:
        condition: service_healthy
      zipkin:
        condition: service_started
    networks:
      backend:

  auth-service:
    image: auth-service:latest
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    restart: "no"
    ports:
      - "8084:8084"
    depends_on:
      config-server:
        condition: service_healthy
      to-do-list-db:
        condition: service_healthy
      zipkin:
        condition: service_started
    networks:
      backend:

  to-do-list-db:
    image: elestio/postgres:17
    restart: unless-stopped  # Автоматический перезапуск при падении
    ports:
      - "5432:5432"
    volumes:
      - to-do-list-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: to-do-list-db
    healthcheck: # Проверка готовности БД
      test: [ "CMD-SHELL", "pg_isready -U postgres -d to-do-list-db" ]
      interval: 5s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    networks:
      backend:

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000" # API порт
      - "9001:9001" # Console порт
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      backend:

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=mem
    restart: unless-stopped
    networks:
      backend:

volumes:
  to-do-list-db:
  minio-data:

networks:
  backend:
    driver: bridge